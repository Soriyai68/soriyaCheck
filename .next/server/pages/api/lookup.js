"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/lookup";
exports.ids = ["pages/api/lookup"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flookup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Clookup.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flookup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Clookup.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_lookup_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\lookup.js */ \"(api-node)/./pages/api/lookup.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_lookup_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_lookup_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/lookup\",\n        pathname: \"/api/lookup\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_lookup_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/lookup\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/lookup\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flookup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Clookup.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/lookup.js":
/*!*****************************!*\
  !*** ./pages/api/lookup.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var google_libphonenumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! google-libphonenumber */ \"google-libphonenumber\");\n/* harmony import */ var google_libphonenumber__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(google_libphonenumber__WEBPACK_IMPORTED_MODULE_0__);\n\nconst phoneUtil = google_libphonenumber__WEBPACK_IMPORTED_MODULE_0__.PhoneNumberUtil.getInstance();\nfunction handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed'\n        });\n    }\n    const { phone_number } = req.body;\n    let number = phone_number;\n    // Remove all spaces and non-digit characters except leading +\n    number = number.replace(/[^\\d+]/g, '');\n    if (number.startsWith('0') && !number.startsWith('+')) {\n        number = '+855' + number.slice(1);\n    }\n    try {\n        const parsed = phoneUtil.parseAndKeepRawInput(number, 'KH');\n        if (!phoneUtil.isValidNumber(parsed)) {\n            return res.status(400).json({\n                error: 'Invalid phone number.'\n            });\n        }\n        if (phoneUtil.getRegionCodeForNumber(parsed) !== 'KH') {\n            return res.status(400).json({\n                error: 'Please enter a Cambodian phone number.'\n            });\n        }\n        // Carrier detection\n        let provider = 'Unknown';\n        try {\n            // google-libphonenumber does not provide carrier by default, so we use prefix mapping\n            const prefix = number.replace('+855', '').substring(0, 2);\n            const carrierMap = {\n                '10': 'Cellcard',\n                '11': 'Cellcard',\n                '12': 'Cellcard',\n                '13': 'Cellcard',\n                '14': 'Cellcard',\n                '15': 'Cellcard',\n                '16': 'Smart',\n                '17': 'Cellcard',\n                '18': 'Smart',\n                '60': 'Smart',\n                '61': 'Smart',\n                '66': 'Smart',\n                '67': 'Smart',\n                '68': 'Smart',\n                '69': 'Smart',\n                '70': 'Metfone',\n                '71': 'Metfone',\n                '77': 'Metfone',\n                '78': 'Metfone',\n                '79': 'Metfone',\n                '81': 'Smart',\n                '85': 'Cellcard',\n                '86': 'Cellcard',\n                '87': 'Smart',\n                '88': 'Smart',\n                '89': 'Smart',\n                '90': 'Cellcard',\n                '92': 'Cellcard',\n                '93': 'Cellcard',\n                '95': 'Cellcard',\n                '96': 'Smart',\n                '97': 'Metfone',\n                '98': 'Cellcard',\n                '99': 'Smart'\n            };\n            if (carrierMap[prefix]) provider = carrierMap[prefix];\n        } catch  {}\n        res.json({\n            number: phoneUtil.format(parsed, google_libphonenumber__WEBPACK_IMPORTED_MODULE_0__.PhoneNumberFormat.INTERNATIONAL),\n            location: 'Cambodia',\n            provider,\n            timezones: [\n                'Asia/Phnom_Penh'\n            ]\n        });\n    } catch  {\n        res.status(400).json({\n            error: 'Invalid format. Use 012345678 or +85512345678.'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9sb29rdXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRGO0FBRTVGLE1BQU1HLFlBQVlILGtFQUFlQSxDQUFDSSxXQUFXO0FBRTlCLFNBQVNDLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUN0QyxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBcUI7SUFDNUQ7SUFDQSxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHTixJQUFJTyxJQUFJO0lBQ2pDLElBQUlDLFNBQVNGO0lBQ2IsOERBQThEO0lBQzlERSxTQUFTQSxPQUFPQyxPQUFPLENBQUMsV0FBVztJQUNuQyxJQUFJRCxPQUFPRSxVQUFVLENBQUMsUUFBUSxDQUFDRixPQUFPRSxVQUFVLENBQUMsTUFBTTtRQUNyREYsU0FBUyxTQUFTQSxPQUFPRyxLQUFLLENBQUM7SUFDakM7SUFDQSxJQUFJO1FBQ0YsTUFBTUMsU0FBU2YsVUFBVWdCLG9CQUFvQixDQUFDTCxRQUFRO1FBQ3RELElBQUksQ0FBQ1gsVUFBVWlCLGFBQWEsQ0FBQ0YsU0FBUztZQUNwQyxPQUFPWCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQXdCO1FBQy9EO1FBQ0EsSUFBSVIsVUFBVWtCLHNCQUFzQixDQUFDSCxZQUFZLE1BQU07WUFDckQsT0FBT1gsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUF5QztRQUNoRjtRQUNBLG9CQUFvQjtRQUNwQixJQUFJVyxXQUFXO1FBQ2YsSUFBSTtZQUNGLHNGQUFzRjtZQUN0RixNQUFNQyxTQUFTVCxPQUFPQyxPQUFPLENBQUMsUUFBUSxJQUFJUyxTQUFTLENBQUMsR0FBRztZQUN2RCxNQUFNQyxhQUFhO2dCQUNqQixNQUFNO2dCQUFZLE1BQU07Z0JBQVksTUFBTTtnQkFBWSxNQUFNO2dCQUFZLE1BQU07Z0JBQVksTUFBTTtnQkFBWSxNQUFNO2dCQUFTLE1BQU07Z0JBQVksTUFBTTtnQkFBUyxNQUFNO2dCQUFTLE1BQU07Z0JBQVMsTUFBTTtnQkFBUyxNQUFNO2dCQUFTLE1BQU07Z0JBQVMsTUFBTTtnQkFBUyxNQUFNO2dCQUFXLE1BQU07Z0JBQVcsTUFBTTtnQkFBVyxNQUFNO2dCQUFXLE1BQU07Z0JBQVcsTUFBTTtnQkFBUyxNQUFNO2dCQUFZLE1BQU07Z0JBQVksTUFBTTtnQkFBUyxNQUFNO2dCQUFTLE1BQU07Z0JBQVMsTUFBTTtnQkFBWSxNQUFNO2dCQUFZLE1BQU07Z0JBQVksTUFBTTtnQkFBWSxNQUFNO2dCQUFTLE1BQU07Z0JBQVcsTUFBTTtnQkFBWSxNQUFNO1lBQzdpQjtZQUNBLElBQUlBLFVBQVUsQ0FBQ0YsT0FBTyxFQUFFRCxXQUFXRyxVQUFVLENBQUNGLE9BQU87UUFDdkQsRUFBRSxPQUFNLENBQUM7UUFDVGhCLElBQUlHLElBQUksQ0FBQztZQUNQSSxRQUFRWCxVQUFVdUIsTUFBTSxDQUFDUixRQUFRakIsb0VBQWlCQSxDQUFDMEIsYUFBYTtZQUNoRUMsVUFBVTtZQUNWTjtZQUNBTyxXQUFXO2dCQUFDO2FBQWtCO1FBQ2hDO0lBQ0YsRUFBRSxPQUFNO1FBQ050QixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBaUQ7SUFDakY7QUFDRiIsInNvdXJjZXMiOlsiRDpcXGJidVxcUHl0aG9uXFxjaGVja19waG9uZV9udW1iZXJfY29tcGFueVxccGFnZXNcXGFwaVxcbG9va3VwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBob25lTnVtYmVyVXRpbCwgUGhvbmVOdW1iZXJGb3JtYXQsIFBob25lTnVtYmVyVHlwZSB9IGZyb20gJ2dvb2dsZS1saWJwaG9uZW51bWJlcic7XHJcblxyXG5jb25zdCBwaG9uZVV0aWwgPSBQaG9uZU51bWJlclV0aWwuZ2V0SW5zdGFuY2UoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XHJcbiAgfVxyXG4gIGNvbnN0IHsgcGhvbmVfbnVtYmVyIH0gPSByZXEuYm9keTtcclxuICBsZXQgbnVtYmVyID0gcGhvbmVfbnVtYmVyO1xyXG4gIC8vIFJlbW92ZSBhbGwgc3BhY2VzIGFuZCBub24tZGlnaXQgY2hhcmFjdGVycyBleGNlcHQgbGVhZGluZyArXHJcbiAgbnVtYmVyID0gbnVtYmVyLnJlcGxhY2UoL1teXFxkK10vZywgJycpO1xyXG4gIGlmIChudW1iZXIuc3RhcnRzV2l0aCgnMCcpICYmICFudW1iZXIuc3RhcnRzV2l0aCgnKycpKSB7XHJcbiAgICBudW1iZXIgPSAnKzg1NScgKyBudW1iZXIuc2xpY2UoMSk7XHJcbiAgfVxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBwYXJzZWQgPSBwaG9uZVV0aWwucGFyc2VBbmRLZWVwUmF3SW5wdXQobnVtYmVyLCAnS0gnKTtcclxuICAgIGlmICghcGhvbmVVdGlsLmlzVmFsaWROdW1iZXIocGFyc2VkKSkge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0ludmFsaWQgcGhvbmUgbnVtYmVyLicgfSk7XHJcbiAgICB9XHJcbiAgICBpZiAocGhvbmVVdGlsLmdldFJlZ2lvbkNvZGVGb3JOdW1iZXIocGFyc2VkKSAhPT0gJ0tIJykge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1BsZWFzZSBlbnRlciBhIENhbWJvZGlhbiBwaG9uZSBudW1iZXIuJyB9KTtcclxuICAgIH1cclxuICAgIC8vIENhcnJpZXIgZGV0ZWN0aW9uXHJcbiAgICBsZXQgcHJvdmlkZXIgPSAnVW5rbm93bic7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBnb29nbGUtbGlicGhvbmVudW1iZXIgZG9lcyBub3QgcHJvdmlkZSBjYXJyaWVyIGJ5IGRlZmF1bHQsIHNvIHdlIHVzZSBwcmVmaXggbWFwcGluZ1xyXG4gICAgICBjb25zdCBwcmVmaXggPSBudW1iZXIucmVwbGFjZSgnKzg1NScsICcnKS5zdWJzdHJpbmcoMCwgMik7XHJcbiAgICAgIGNvbnN0IGNhcnJpZXJNYXAgPSB7XHJcbiAgICAgICAgJzEwJzogJ0NlbGxjYXJkJywgJzExJzogJ0NlbGxjYXJkJywgJzEyJzogJ0NlbGxjYXJkJywgJzEzJzogJ0NlbGxjYXJkJywgJzE0JzogJ0NlbGxjYXJkJywgJzE1JzogJ0NlbGxjYXJkJywgJzE2JzogJ1NtYXJ0JywgJzE3JzogJ0NlbGxjYXJkJywgJzE4JzogJ1NtYXJ0JywgJzYwJzogJ1NtYXJ0JywgJzYxJzogJ1NtYXJ0JywgJzY2JzogJ1NtYXJ0JywgJzY3JzogJ1NtYXJ0JywgJzY4JzogJ1NtYXJ0JywgJzY5JzogJ1NtYXJ0JywgJzcwJzogJ01ldGZvbmUnLCAnNzEnOiAnTWV0Zm9uZScsICc3Nyc6ICdNZXRmb25lJywgJzc4JzogJ01ldGZvbmUnLCAnNzknOiAnTWV0Zm9uZScsICc4MSc6ICdTbWFydCcsICc4NSc6ICdDZWxsY2FyZCcsICc4Nic6ICdDZWxsY2FyZCcsICc4Nyc6ICdTbWFydCcsICc4OCc6ICdTbWFydCcsICc4OSc6ICdTbWFydCcsICc5MCc6ICdDZWxsY2FyZCcsICc5Mic6ICdDZWxsY2FyZCcsICc5Myc6ICdDZWxsY2FyZCcsICc5NSc6ICdDZWxsY2FyZCcsICc5Nic6ICdTbWFydCcsICc5Nyc6ICdNZXRmb25lJywgJzk4JzogJ0NlbGxjYXJkJywgJzk5JzogJ1NtYXJ0J1xyXG4gICAgICB9O1xyXG4gICAgICBpZiAoY2Fycmllck1hcFtwcmVmaXhdKSBwcm92aWRlciA9IGNhcnJpZXJNYXBbcHJlZml4XTtcclxuICAgIH0gY2F0Y2gge31cclxuICAgIHJlcy5qc29uKHtcclxuICAgICAgbnVtYmVyOiBwaG9uZVV0aWwuZm9ybWF0KHBhcnNlZCwgUGhvbmVOdW1iZXJGb3JtYXQuSU5URVJOQVRJT05BTCksXHJcbiAgICAgIGxvY2F0aW9uOiAnQ2FtYm9kaWEnLFxyXG4gICAgICBwcm92aWRlcixcclxuICAgICAgdGltZXpvbmVzOiBbJ0FzaWEvUGhub21fUGVuaCddXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIHtcclxuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdJbnZhbGlkIGZvcm1hdC4gVXNlIDAxMjM0NTY3OCBvciArODU1MTIzNDU2NzguJyB9KTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIlBob25lTnVtYmVyVXRpbCIsIlBob25lTnVtYmVyRm9ybWF0IiwiUGhvbmVOdW1iZXJUeXBlIiwicGhvbmVVdGlsIiwiZ2V0SW5zdGFuY2UiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwicGhvbmVfbnVtYmVyIiwiYm9keSIsIm51bWJlciIsInJlcGxhY2UiLCJzdGFydHNXaXRoIiwic2xpY2UiLCJwYXJzZWQiLCJwYXJzZUFuZEtlZXBSYXdJbnB1dCIsImlzVmFsaWROdW1iZXIiLCJnZXRSZWdpb25Db2RlRm9yTnVtYmVyIiwicHJvdmlkZXIiLCJwcmVmaXgiLCJzdWJzdHJpbmciLCJjYXJyaWVyTWFwIiwiZm9ybWF0IiwiSU5URVJOQVRJT05BTCIsImxvY2F0aW9uIiwidGltZXpvbmVzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/lookup.js\n");

/***/ }),

/***/ "google-libphonenumber":
/*!****************************************!*\
  !*** external "google-libphonenumber" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("google-libphonenumber");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flookup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Clookup.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();